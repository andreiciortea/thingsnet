@base <http://www.8tracks.com/> .
@prefix stn: <http://purl.org/stn/core#> .
@prefix stn-ops: <http://purl.org/stn/operations#> .
@prefix stn-http: <http://purl.org/stn/http#> .
@prefix http: <http://www.w3.org/2011/http#> .

<#platform>
    a stn:Platform ;
    stn:name "8tracks" ;
    stn-http:baseURL <https://8tracks.com> ;
    stn-ops:consumes stn-http:JSON ;
    stn-ops:produces stn-http:JSON ;
    stn-ops:supports <#createAccount> ,
        <#getAccount> ,
        <#getConnectionsTo> ,
        <#getConnectionsFrom> ,
        <#follow> ,
        <#unfollow> .


<#8tracksAccountJSONMapping>
    a stn-http:JSONRepresentation ;
    stn-ops:representationOf [ a stn:UserAccount ] ;
    stn-http:key "user" ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "id" ;
            stn-http:STNTerm stn:id ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "login" ;
            stn-http:STNTerm stn:name ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "bio" ;
            stn-http:STNTerm stn:description ;
        ] .

<#8tracksUserAccountListJSONMapping>
    a stn-http:JSONArray ;
    stn-http:key "users" ;
    stn-ops:arrayOf <#8tracksAccountJSONMapping> .

<#createAccount>
    a stn-ops:CreateUserAccount ;
    stn-ops:implementedAs
        [ a stn-http:STNRequest ;
            http:methodName "POST" ;
            http:requestURI "/users.json" ;
            http:headers (
                [ a http:RequestHeader ;
                    http:fieldName "X-Api-Version" ;
                    http:fieldValue "3" ;
                ]
                [ a http:RequestHeader ;
                    http:fieldName "X-Api-Key" ;
                    http:fieldValue [ a stn-ops:DevAPIKey ] ;
                ]
            ) ;
            stn-http:requiresAuth false ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-ops:key "user[login]" ;
            stn-http:paramIn stn-http:Body ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountPassword ;
            stn-ops:key "user[password]" ;
            stn-http:paramIn stn-http:Body ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:EmailAddress ;
            stn-ops:key "user[email]" ;
            stn-http:paramIn stn-http:Body ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:ToSApproval ;
            stn-ops:key "user[agree_to_terms]" ;
            stn-ops:val "1" ;
            stn-http:paramIn stn-http:Body;
        ] ;
    stn-ops:hasOutput <#8tracksAccountJSONMapping> .

<#getAccount>
    a stn-ops:GetUserAccount ;
    stn-ops:implementedAs [
            a stn-http:STNRequest ;
            http:methodName "GET" ;
            http:requestURI "/users/:accountId.json" ;
        ] ;
    stn-ops:hasRequiredInput [
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#8tracksAccountJSONMapping> .

<#getConnectionsTo>
    a stn-ops:GetConnectionsTo ;
    stn-ops:implementedAs [
            a stn-http:STNRequest ;
            http:methodName "GET" ;
            http:requestURI "/users/:accountId/followers.json" ;
        ] ;
    stn-ops:hasRequiredInput [
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#8tracksUserAccountListJSONMapping> .

<#getConnectionsFrom>
    a stn-ops:GetConnectionsFrom ;
    stn-ops:implementedAs [
            a stn-http:STNRequest ;
            http:methodName "GET" ;
            http:requestURI "/users/:accountId/following.json" ;
        ] ;
    stn-ops:hasRequiredInput [
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#8tracksUserAccountListJSONMapping> .

<#follow>
    a stn-ops:CreateConnectionTo ;
    stn-ops:implementedAs [
            a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/users/:accountId/follow.json" ;
        ] ;
    stn-ops:hasRequiredInput [
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#8tracksAccountJSONMapping> .

<#unfollow>
    a stn-ops:DeleteConnectionTo ;
    stn-ops:implementedAs [
            a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/users/:accountId/unfollow.json" ;
        ] ;
    stn-ops:hasRequiredInput [
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#8tracksAccountJSONMapping> .