@base <http://www.facebook.com/> .
@prefix stn: <http://purl.org/stn/core#> .
@prefix stn-ops: <http://purl.org/stn/operations#> .
@prefix stn-http: <http://purl.org/stn/http#> .
@prefix http: <http://www.w3.org/2011/http#> .

<#platform>
    a stn:Platform ;
    stn:name "Facebook" ;
    stn-http:baseURL <https://graph.facebook.com/v2.3> ;
    stn-http:supportsAuth stn-http:OAuth ;
    stn-http:consumes stn-http:JSON ;
    stn-http:produces stn-http:JSON ;
    stn-ops:supports <#getAccount> ,
        <#getConnectionsTo> ,
        <#getConnectionsFrom> ,
        <#getGroup> ,
        <#getGroupMembers> ,
        <#getGroupsOfUser> ,
        <#getMessage> ,
        <#getReceivedMessages> ,
        <#getSentMessages> ,
        <#postMessage> ,
        <#postMessageToGroup> ,
        <#deletePost> ,
        <#getFeed> ,
        <#getUserFeed> ,
        <#getGroupFeed> .


#
# Account operations
#

<#fbAccountJSONMapping>
    a stn-http:JSONRepresentation ;
    stn-ops:representationOf [ a stn:UserAccount ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "id" ;
            stn-http:STNTerm stn:id ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "name" ;
            stn-http:STNTerm stn:name ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "bio" ;
            stn-http:STNTerm stn:description ;
        ] .

<#getAccount>
    a stn-ops:GetUserAccount ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#fbAccountJSONMapping> .


#
# Connection operations
#

<#fbFriendsJSONMapping>
    a stn-http:JSONArray ;
    stn-http:key "data" ;
    stn-ops:arrayOf <#fbAccountJSONMapping> .

<#getConnectionsTo>
    a stn-ops:GetConnectionsTo ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/friends" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#fbFriendsJSONMapping> .

<#getConnectionsFrom>
    a stn-ops:GetConnectionsFrom ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/friends" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#fbFriendsJSONMapping> .


#
# Group operations
#

<#fbGroupJSONMapping>
    a stn-http:JSONRepresentation ;
    stn-ops:representationOf [ a stn:Group ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "id" ;
            stn-http:STNTerm stn:id ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "name" ;
            stn-http:STNTerm stn:name ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "about" ;
            stn-http:STNTerm stn:description ;
        ] .

<#getGroup>
    a stn-ops:GetGroup ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:GroupID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#fbGroupJSONMapping> .

<#getGroupMembers>
    a stn-ops:GetGroupMembers ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/members" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:GroupID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-http:key "data" ;
            stn-ops:arrayOf <#fbGroupJSONMapping> ;
        ] .

<#getGroupsOfUser>
    a stn-ops:GetGroupsOfUser ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/groups" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-http:key "data" ;
            stn-ops:arrayOf <#fbGroupJSONMapping> ;
        ] .


#
# Message operations
#

<#fbMessageJSONMapping>
    a stn-http:JSONRepresentation ;
    stn-ops:representationOf [ a stn:Message ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "id" ;
            stn-http:stnTerm stn:id ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "from" ;
            stn-http:stnTerm stn:hasSender ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "to" ;
            stn-http:stnTerm stn:hasReceiver ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "message" ;
            stn-http:stnTerm stn:hasBody ;
        ] .

<#getMessage>
    a stn-ops:GetMessage ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:MessageID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput <#fbMessageJSONMapping> .

<#getReceivedMessages>
    a stn-ops:GetReceivedMessages ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/inbox" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .

<#getSentMessages>
    a stn-ops:GetSentMessages ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/outbox" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
            stn-http:paramIn stn-http:Path;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .


#
# Feed operations
#

<#postMessage>
    a stn-ops:PostMessage ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "POST" ;
            http:requestURI "/:id/feed" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:MessageBody ;
            stn-http:key "message" ;
        ] ;
    stn-ops:hasOutput <#fbMessageJSONMapping> .

<#postMessageToGroup>
    a stn-ops:PostMessageToGroup ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "POST" ;
            http:requestURI "/:groupid/feed" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:GroupID ;
            stn-http:key ":groupid" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:MessageBody ;
            stn-http:key "message" ;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .

<#deletePost>
    a stn-ops:DeletePost ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "DELETE" ;
            http:requestURI "/:id" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:MessageID ;
            stn-http:key ":id" ;
        ] .

<#getFeed>
    a stn-ops:GetHomeFeed ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/home" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .

<#getUserFeed>
    a stn-ops:GetUserAccountFeed ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/feed" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:UserAccountID ;
            stn-http:key ":id" ;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .

<#getGroupFeed>
    a stn-ops:GetGroupFeed ;
    stn-ops:implementedAs
        [ a stn-http:AuthSTNRequest ;
            http:methodName "GET" ;
            http:requestURI "/:id/feed" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-ops:GroupID ;
            stn-http:key ":id" ;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONArray ;
            stn-ops:arrayOf <#fbMessageJSONMapping> ;
        ] .