@base <http://www.dweet.io/> .
@prefix stn: <http://purl.org/stn/core#> .
@prefix stn-ops: <http://purl.org/stn/operations#> .
@prefix stn-http: <http://purl.org/stn/http#> .
@prefix http: <http://www.w3.org/2011/http#> .

<#platform>
    a stn:Platform ;
    stn:name "dweet.io" ;
    stn-http:baseURL <https://dweet.io> ;
    stn-ops:consumes stn-http:JSON ;
    stn-ops:produces stn-http:JSON ;
    stn-ops:supports <#createAccount> , 
        <#postDweet> ,
        <#getDweets> .


<#dweetJSONMapping>
    a stn-http:JSONRepresentation ;
    stn-ops:representationOf [ a stn:DataObject ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "created" ;
            stn-http:STNTerm stn:id ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "thing" ;
            stn-http:STNTerm stn:createdBy ;
        ] ;
    stn-ops:contains [
            a stn-http:Mapping ;
            stn-http:key "content" ;
            stn-http:STNTerm stn:data ;
        ] .

<#createAccount>
    a stn-ops:PostDataToUserAccountFeed ;
    stn-ops:implementedAs
        [ a stn-http:STNRequest ;
            http:methodName "GET" ;
            http:requestURI "/dweet/for/:accountId" ;
        ] ;
    stn-ops:hasRequiredInput
        [ a stn-http:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path ;
        ] ;
    stn-ops:hasOutput
        [ a stn-http:JSONRepresentation ;
            stn-ops:representationOf [ a stn:UserAccount ] ;
            stn-http:key "with" ;
            stn-ops:contains [ 
                    a stn-http:Mapping ;
                    stn-http:key "thing" ;
                    stn-http:STNTerm stn:createdBy;
                ] ;
        ] .

<#postDweet>
    a stn-ops:PostDataToUserAccountFeed ;
    stn-ops:implementedAs [ 
            a stn-http:STNRequest ;
            http:methodName "POST" ;
            http:requestURI "/dweet/for/:accountId" ;
        ] ;
    stn-ops:hasRequiredInput [ 
            a stn-http:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path ;
        ] ;
    stn-ops:hasRequiredInput [ 
            a stn-http:JSONRepresentation ;
            stn-ops:representationOf [ a stn:DataObject ] ;
            stn-http:paramIn stn-http:Body;
        ] ;
    stn-ops:hasOutput [ 
            a stn-http:JSONRepresentation ;
            stn-http:key "with" ;
            stn-ops:representationOf <#dweetJSONMapping> ;
        ] .

<#getDweets>
    a stn-ops:GetUserAccountFeed;
    stn-ops:implementedAs [ 
            a stn-http:STNRequest ;
            http:methodName "GET" ;
            http:requestURI "/get/dweets/for/:accountId" ;
        ] ;
    stn-ops:hasRequiredInput [ 
            a stn-ops:UserAccountID ;
            stn-http:key ":accountId" ;
            stn-http:paramIn stn-http:Path ;
        ] ;
    stn-ops:hasOutput [ 
            a stn-http:JSONArray ;
            stn-http:key "with" ;
            stn-ops:arrayOf <#dweetJSONMapping> ;
        ] .